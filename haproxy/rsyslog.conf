# rsyslog configuration file

# For more information see /usr/share/doc/rsyslog-*/rsyslog_conf.html
# or latest version online at http://www.rsyslog.com/doc/rsyslog_conf.html
# If you experience problems, see http://www.rsyslog.com/doc/troubleshoot.html

#### MODULES ####

#module(load="imklog") # reads kernel messages (the same are read from journald)
#module(load="immark") # provides --MARK-- message capability

# Provides UDP syslog reception
# for parameters see http://www.rsyslog.com/doc/imudp.html
module(load="imudp") # needs to be done just once
input(type="imudp" port="514")

# Provides TCP syslog reception
# for parameters see http://www.rsyslog.com/doc/imtcp.html
#module(load="imtcp") # needs to be done just once
#input(type="imtcp" port="514")

#### RULES ####

#*.info;mail.none;authpriv.none;cron.none                /var/log/messages
# https://www.rsyslog.com/doc/master/configuration/actions.html
# You may prefix each entry with the minus ``-'' sign to omit syncing the file after every logging. Note that you might lose information
# if the system crashes right behind a write attempt. Nevertheless this might give you back some performance,
# especially if you run programs that use logging in a very verbose manner.
local0.*                                                -/var/log/haproxy.log

# Discard the rest
# 停止指令，在一条规则后，代表如果 log 被当前的 rule 已经处理过了，则完成本次执行，跳过后续rule的处理。 类似 C++里 switch/case，如果忘记加 break 的穿透副作用。
# 如果没有这个指令，则一条新来的消息可以被多个rule处理。 这里我们并不需要，只要命中就保存到接收端同名的文件里。
& ~
